{
  "paper_id": "d33624f8b27d81d663f54d3e167aaf15968ff8a4",
  "metadata": {
    "title": "An OpenMP-based tool for finding longest common subsequence in bioinformatics",
    "coda_data_split": "train",
    "coda_paper_id": 8167,
    "coda_has_expert_labels": false,
    "subset": "comm_use_subset"
  },
  "abstract": [
    {
      "original_text": "Objective: Finding the longest common subsequence (LCS) among sequences is NP-hard. This is an important problem in bioinformatics for DNA sequence alignment and pattern discovery. In this research, we propose new CPU-based parallel implementations that can provide significant advantages in terms of execution times, monetary cost, and pervasiveness in finding LCS of DNA sequences in an environment where Graphics Processing Units are not available. For general purpose use, we also make the OpenMP-based tool publicly available to end users.",
      "sentences": [
        [
          {
            "segment_text": "Objective : Finding the longest common subsequence ( LCS ) among sequences is NP-hard .",
            "crowd_label": "background"
          }
        ],
        [
          {
            "segment_text": "This is an important problem in bioinformatics for DNA sequence alignment and pattern discovery .",
            "crowd_label": "background"
          }
        ],
        [
          {
            "segment_text": "In this research , we propose new CPU-based parallel implementations that can provide significant advantages in terms of execution times ,",
            "crowd_label": "purpose"
          },
          {
            "segment_text": "monetary cost , and pervasiveness in finding LCS of DNA sequences in an environment where Graphics Processing Units are not available .",
            "crowd_label": "purpose"
          }
        ],
        [
          {
            "segment_text": "For general purpose use , we also make the OpenMP-based tool publicly available to end users .",
            "crowd_label": "purpose"
          }
        ]
      ]
    },
    {
      "original_text": "In this study, we develop three novel parallel versions of the LCS algorithm on: (i) distributed memory machine using message passing interface (MPI); (ii) shared memory machine using OpenMP, and (iii) hybrid platform that utilizes both distributed and shared memory using MPI-OpenMP. The experimental results with both simulated and real DNA sequence data show that the shared memory OpenMP implementation provides at least two-times absolute speedup than the best sequential version of the algorithm and a relative speedup of almost 7. We provide a detailed comparison of the execution times among the implementations on different platforms with different versions of the algorithm. We also show that removing branch conditions negatively affects the performance of the CPU-based parallel algorithm on OpenMP platform.",
      "sentences": [
        [
          {
            "segment_text": "In this study , we develop three novel parallel versions of the LCS algorithm on : ( i ) distributed memory machine using message passing interface ( MPI ) ; ( ii ) shared memory machine using OpenMP ,",
            "crowd_label": "method"
          },
          {
            "segment_text": "and ( iii ) hybrid platform that utilizes both distributed and shared memory using MPI-OpenMP .",
            "crowd_label": "method"
          }
        ],
        [
          {
            "segment_text": "The experimental results with both simulated and real DNA sequence data show that the shared memory OpenMP implementation provides at least two-times absolute speedup than the best sequential version of the algorithm and a relative speedup of almost 7 .",
            "crowd_label": "finding"
          }
        ],
        [
          {
            "segment_text": "We provide a detailed comparison of the execution times among the implementations on different platforms with different versions of the algorithm .",
            "crowd_label": "finding"
          }
        ],
        [
          {
            "segment_text": "We also show that removing branch conditions negatively affects the performance of the CPU-based parallel algorithm on OpenMP platform .",
            "crowd_label": "finding"
          }
        ]
      ]
    }
  ],
  "abstract_stats": {
    "paragraph_num": "2",
    "sentence_num": "8",
    "segment_num": "10",
    "token_num": "227"
  }
}